"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoryRoutes = void 0;
const express_1 = __importDefault(require("express"));
const story_controller_1 = require("./story.controller");
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const story_validation_1 = require("./story.validation");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const user_constants_1 = require("../User/user.constants");
const router = express_1.default.Router();
router.post('/', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), (0, validateRequest_1.default)(story_validation_1.StoryValidations.createStoryValidationSchema), story_controller_1.StoryController.createStory);
router.get('/', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), story_controller_1.StoryController.getUserStories);
router.get('/all-users-stories', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), story_controller_1.StoryController.getAllUserStories);
router.get('/:storyId', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), story_controller_1.StoryController.getUserStories);
router.patch('/:storyId', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), (0, validateRequest_1.default)(story_validation_1.StoryValidations.updateStoryValidationSchema), story_controller_1.StoryController.updateStory);
router.post('/:storyId/view', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), (0, validateRequest_1.default)(story_validation_1.StoryValidations.addViewValidationSchema), story_controller_1.StoryController.addView);
router.post('/:storyId/reaction', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), (0, validateRequest_1.default)(story_validation_1.StoryValidations.addReactionValidationSchema), story_controller_1.StoryController.addReaction);
router.delete('/:storyId', (0, auth_1.default)(user_constants_1.USER_ROLE.USER, user_constants_1.USER_ROLE.ADMIN), (0, validateRequest_1.default)(story_validation_1.StoryValidations.updateStoryValidationSchema), story_controller_1.StoryController.deleteStory);
exports.StoryRoutes = router;
